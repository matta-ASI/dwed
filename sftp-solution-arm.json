{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "sftpprocessing",
      "metadata": {
        "description": "Prefix for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "sftpUsername": {
      "type": "string",
      "metadata": {
        "description": "SFTP username"
      }
    },
    "sftpPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH public key for SFTP authentication"
      }
    },
    "adminEmail": {
      "type": "string",
      "metadata": {
        "description": "Email address for alerts"
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(parameters('projectName'), 'stor', uniqueString(resourceGroup().id))]",
    "keyVaultName": "[concat(parameters('projectName'), '-kv-', uniqueString(resourceGroup().id))]",
    "dataFactoryName": "[concat(parameters('projectName'), '-df-', uniqueString(resourceGroup().id))]",
    "logicAppName": "[concat(parameters('projectName'), '-la-', uniqueString(resourceGroup().id))]",
    "logAnalyticsName": "[concat(parameters('projectName'), '-logs-', uniqueString(resourceGroup().id))]",
    "applicationInsightsName": "[concat(parameters('projectName'), '-ai-', uniqueString(resourceGroup().id))]",
    "actionGroupName": "[concat(parameters('projectName'), '-ag-', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "networkAcls": {
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "isSftpEnabled": true,
        "isLocalUserEnabled": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 30
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 30
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(variables('storageAccountName'), '/default/inbound')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(variables('storageAccountName'), '/default/outbound')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(variables('storageAccountName'), '/default/archive')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/localUsers",
      "apiVersion": "2023-01-01",
      "name": "[concat(variables('storageAccountName'), '/', parameters('sftpUsername'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "permissionScopes": [
          {
            "permissions": "rcwdl",
            "service": "blob",
            "resourceName": "inbound"
          },
          {
            "permissions": "rcwdl",
            "service": "blob",
            "resourceName": "outbound"
          }
        ],
        "homeDirectory": "inbound",
        "sshAuthorizedKeys": [
          {
            "description": "SFTP Access Key",
            "key": "[parameters('sftpPublicKey')]"
          }
        ],
        "hasSharedKey": false,
        "hasSshKey": true,
        "hasSshPassword": false
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-02-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": true,
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ],
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      }
    },
    {
      "type": "Microsoft.DataFactory/factories",
      "apiVersion": "2018-06-01",
      "name": "[variables('dataFactoryName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2023-01-01",
      "name": "[variables('actionGroupName')]",
      "location": "Global",
      "properties": {
        "groupShortName": "SFTPAlerts",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "AdminEmail",
            "emailAddress": "[parameters('adminEmail')]",
            "useCommonAlertSchema": true
          }
        ]
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('logicAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "storageAccountName": {
              "defaultValue": "[variables('storageAccountName')]",
              "type": "String"
            }
          },
          "triggers": {
            "When_a_blob_is_added_or_modified": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 1
              },
              "evaluatedRecurrence": {
                "frequency": "Minute",
                "interval": 1
              },
              "splitOn": "@triggerBody()",
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/triggers/batch/onupdatedfile",
                "queries": {
                  "folderId": "L2luYm91bmQ=",
                  "maxFileCount": 10
                }
              }
            }
          },
          "actions": {
            "Initialize_variable": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "fileName",
                    "type": "string",
                    "value": "@{triggerBody()?['Name']}"
                  }
                ]
              }
            },
            "Send_an_email": {
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "Body": "<p>A new file has been uploaded to the SFTP inbound folder:<br><br>File Name: @{variables('fileName')}<br>Upload Time: @{utcNow()}</p>",
                  "Subject": "SFTP File Upload Notification",
                  "To": "[parameters('adminEmail')]"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v2/Mail"
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "connectionId": "[resourceId('Microsoft.Web/connections', 'azureblob')]",
                "connectionName": "azureblob",
                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azureblob')]"
              },
              "office365": {
                "connectionId": "[resourceId('Microsoft.Web/connections', 'office365')]",
                "connectionName": "office365",
                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'office365')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "azureblob",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "displayName": "Azure Blob Storage Connection",
        "api": {
          "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azureblob')]"
        },
        "parameterValues": {
          "accountName": "[variables('storageAccountName')]",
          "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "office365",
      "location": "[parameters('location')]",
      "properties": {
        "displayName": "Office 365 Outlook Connection",
        "api": {
          "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'office365')]"
        }
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "sftpEndpoint": {
      "type": "string",
      "value": "[concat(variables('storageAccountName'), '.blob.core.windows.net')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "dataFactoryName": {
      "type": "string",
      "value": "[variables('dataFactoryName')]"
    },
    "logicAppName": {
      "type": "string",
      "value": "[variables('logicAppName')]"
    }
  }
}